{"ast":null,"code":"var _jsxFileName = \"/Users/harshpailkar/Desktop/SoulFile/src/components/Channels.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Channels = _ref => {\n  _s();\n  let {\n    provider,\n    account,\n    dappcord,\n    channels,\n    currentChannel,\n    setCurrentChannel\n  } = _ref;\n  const mintNFT = async () => {\n    const minted = await dappcord.safeMint(account, \"\");\n  };\n  const [image, setImage] = useState(null);\n  const handleSubmit = e => {\n    e.preventDefault();\n    this.setState({\n      isLoading: true\n    });\n    setTimeout(() => {\n      // handle the form submission here\n      console.log(this.state.image);\n      // simulate a delay of 2 seconds to hide the loader and show the popup\n      this.setState({\n        isLoading: false,\n        isUploaded: true\n      });\n      setTimeout(() => {\n        this.setState({\n          isUploaded: false\n        });\n      }, 2000);\n    }, 2000);\n    console.log(image);\n  };\n  const handleImageChange = e => {\n    setImage(e.target.files[0]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fileupload\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Upload a file to convert it to a Soul Token!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spacer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"image-upload\",\n        children: \"Choose an image:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"image-upload\",\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: handleImageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn__upload\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Channels, \"azb7M8tR7S/vp1+UqWJMufJLR5I=\");\n_c = Channels;\nexport default Channels;\nvar _c;\n$RefreshReg$(_c, \"Channels\");","map":{"version":3,"names":["useEffect","useState","Channels","provider","account","dappcord","channels","currentChannel","setCurrentChannel","mintNFT","minted","safeMint","image","setImage","handleSubmit","e","preventDefault","setState","isLoading","setTimeout","console","log","state","isUploaded","handleImageChange","target","files"],"sources":["/Users/harshpailkar/Desktop/SoulFile/src/components/Channels.js"],"sourcesContent":["import { useEffect, useState } from 'react'\r\nconst Channels = ({ provider, account, dappcord, channels, currentChannel, setCurrentChannel }) => {\r\n\r\n  const mintNFT = async () => {\r\n    const minted = await dappcord.safeMint(account, \"\")\r\n  }\r\n\r\n  const [image, setImage] = useState(null);\r\n  \r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ isLoading: true });\r\n    setTimeout(() => {\r\n      // handle the form submission here\r\n      console.log(this.state.image);\r\n      // simulate a delay of 2 seconds to hide the loader and show the popup\r\n      this.setState({ isLoading: false, isUploaded: true });\r\n      setTimeout(() => {\r\n        this.setState({ isUploaded: false });\r\n      }, 2000);\r\n    }, 2000);\r\n    console.log(image);\r\n  };\r\n  \r\n  const handleImageChange = (e) => {\r\n    setImage(e.target.files[0]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"fileupload\">\r\n      <h3>Upload a file to convert it to a Soul Token!</h3>\r\n      <div className=\"spacer\"></div>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n      <label htmlFor=\"image-upload\">Choose an image:</label>\r\n      <input\r\n        id=\"image-upload\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={handleImageChange}\r\n      />\r\n      <button type=\"submit\" className='btn__upload'>Upload</button>\r\n      \r\n    </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Channels;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAA;AAC3C,MAAMC,QAAQ,GAAG,QAAkF;EAAA;EAAA,IAAjF;IAAEC,QAAQ;IAAEC,OAAO;IAAEC,QAAQ;IAAEC,QAAQ;IAAEC,cAAc;IAAEC;EAAkB,CAAC;EAE5F,MAAMC,OAAO,GAAG,YAAY;IAC1B,MAAMC,MAAM,GAAG,MAAML,QAAQ,CAACM,QAAQ,CAACP,OAAO,EAAE,EAAE,CAAC;EACrD,CAAC;EAED,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMa,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,EAAE;IAClB,IAAI,CAACC,QAAQ,CAAC;MAAEC,SAAS,EAAE;IAAK,CAAC,CAAC;IAClCC,UAAU,CAAC,MAAM;MACf;MACAC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,KAAK,CAACV,KAAK,CAAC;MAC7B;MACA,IAAI,CAACK,QAAQ,CAAC;QAAEC,SAAS,EAAE,KAAK;QAAEK,UAAU,EAAE;MAAK,CAAC,CAAC;MACrDJ,UAAU,CAAC,MAAM;QACf,IAAI,CAACF,QAAQ,CAAC;UAAEM,UAAU,EAAE;QAAM,CAAC,CAAC;MACtC,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,EAAE,IAAI,CAAC;IACRH,OAAO,CAACC,GAAG,CAACT,KAAK,CAAC;EACpB,CAAC;EAED,MAAMY,iBAAiB,GAAIT,CAAC,IAAK;IAC/BF,QAAQ,CAACE,CAAC,CAACU,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC7B,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,YAAY;IAAA,wBACzB;MAAA,UAAI;IAA4C;MAAA;MAAA;MAAA;IAAA,QAAK,eACrD;MAAK,SAAS,EAAC;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAO,eAE9B;MAAM,QAAQ,EAAEZ,YAAa;MAAA,wBAC7B;QAAO,OAAO,EAAC,cAAc;QAAA,UAAC;MAAgB;QAAA;QAAA;QAAA;MAAA,QAAQ,eACtD;QACE,EAAE,EAAC,cAAc;QACjB,IAAI,EAAC,MAAM;QACX,MAAM,EAAC,SAAS;QAChB,QAAQ,EAAEU;MAAkB;QAAA;QAAA;QAAA;MAAA,QAC5B,eACF;QAAQ,IAAI,EAAC,QAAQ;QAAC,SAAS,EAAC,aAAa;QAAA,UAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAExD;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEV,CAAC;AAAA,GA7CKtB,QAAQ;AAAA,KAARA,QAAQ;AA+Cd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}